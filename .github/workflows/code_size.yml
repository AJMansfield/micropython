name: Check code size

on:
  push:
  pull_request:
    paths:
      - '.github/workflows/*.yml'
      - 'tools/**'
      - 'py/**'
      - 'extmod/**'
      - 'shared/**'
      - 'lib/**'
      - 'ports/bare-arm/**'
      - 'ports/mimxrt/**'
      - 'ports/minimal/**'
      - 'ports/rp2/**'
      - 'ports/samd/**'
      - 'ports/stm32/**'
      - 'ports/unix/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 100
    - name: Install packages
      run: source tools/ci.sh && ci_code_size_setup
    - name: Build
      run: source tools/ci.sh && ci_code_size_build
    - name: Compute code size difference
      run: tools/metrics.py diff ~/size0 ~/size1 | tee diff
    - name: Save PR number
      if: github.event_name == 'pull_request'
      env:
        PR_NUMBER: ${{ github.event.number }}
      run: echo $PR_NUMBER > pr_number
    - name: Upload diff
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: code-size-report
        path: |
          diff
          pr_number
        retention-days: 1
  comment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: 'Download artifact'
        id: download-artifact
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');

            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            const matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "code-size-report"
            });

            if (matchArtifact.length === 0) {
              console.log('no matching artifact found');
              console.log('result: "skip"');

              return 'skip';
            }

            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact[0].id,
               archive_format: 'zip',
            });

            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/code-size-report.zip`, Buffer.from(download.data));

            console.log('artifact downloaded to `code-size-report.zip`');
            console.log('result: "ok"');

            return 'ok';
      - name: 'Unzip artifact'
        if: steps.download-artifact.outputs.result == 'ok'
        run: unzip code-size-report.zip
      - name: Post comment to pull request
        if: steps.download-artifact.outputs.result == 'ok'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');

            const prNumber = Number(fs.readFileSync('pr_number'));
            const codeSizeReport = `Code size report:

            \`\`\`
            ${fs.readFileSync('diff')}
            \`\`\`
            `;

            const comments = await github.paginate(
              github.rest.issues.listComments,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
              }
            );

            comments.reverse();

            const previousComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]'
            )

            // if github-actions[bot] already made a comment, update it,
            // otherwise create a new comment.

            if (previousComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: previousComment.id,
                body: codeSizeReport,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: codeSizeReport,
              });
            }